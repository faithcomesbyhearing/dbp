version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.1
    commands:
      # Update packages and install any additional dependencies
      - apt-get update
       # Install PHP development tools needed for PECL
      - apt-get install -y php-pear php-dev

      # # Install dependencies required for building igbinary and memcached
      # - apt-get install -y libmemcached-dev
      # # Install igbinary and memcached PHP extensions
      # - pecl install igbinary
      # - pecl install -D 'enable-memcached-igbinary="yes"' memcached
      # # Enable igbinary and memcached extensions
      # - echo "extension=igbinary.so" > /etc/php/8.1/cli/conf.d/45-igbinary.ini
      # - echo "extension=memcached.so" > /etc/php/8.1/cli/conf.d/50-memcached.ini
      # # Install New Relic PHP agent
      # - curl -sS https://download.newrelic.com/php_agent/release/newrelic-php5-10.11.0.3-linux.tar.gz | gzip -dc | tar xf -
      # - export NR_INSTALL_SILENT=1
      # - newrelic-php5-10.11.0.3-linux/newrelic-install install
 
      # Configure New Relic options
      - echo "newrelic.license=\"${NEW_RELIC_LICENSE_KEY}\"" >> /etc/php/8.1/cli/conf.d/newrelic.ini
      - echo "newrelic.enabled=true" >> /etc/php/8.1/cli/conf.d/newrelic.ini
      - echo "newrelic.loglevel=debug" >> /etc/php/8.1/cli/conf.d/newrelic.ini
      - echo "newrelic.appname=\"${NEW_RELIC_APP_NAME}\"" >> /etc/php/8.1/cli/conf.d/newrelic.ini
      # Enable custom PHP options
      - echo "expose_php = Off" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "html_errors = Off" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "variables_order = \"EGPCS\"" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "session.save_path = \"/tmp\"" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "default_socket_timeout = 90" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "post_max_size = 32M" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "short_open_tag = 1" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "date.timezone = UTC" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "memory_limit = 256M" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "zlib.output_compression = Off" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "allow_url_fopen = On" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "display_errors = On" > /etc/php/8.1/cli/conf.d/aws.ini
      - echo "max_execution_time = 60" > /etc/php/8.1/cli/conf.d/aws.ini
      # install Composer for dependency management in PHP projects
      - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  pre_build:
    commands:
      # use Composer to install project dependencies
      - composer install
      - echo "APP_KEY=${APP_KEY}" > .env
      # Database connections
      - echo "DBP_HOST=${DBP_HOST}" >> .env
      - echo "DBP_DATABASE=${DBP_DATABASE}" >> .env
      - echo "DBP_USERNAME=${DBP_USERNAME}" >> .env
      - echo "DBP_PASSWORD=${DBP_PASSWORD}" >> .env
      - echo "DBP_USERS_HOST=${DBP_USERS_HOST}" >> .env
      - echo "DBP_USERS_DATABASE=${DBP_USERS_DATABASE}" >> .env
      - echo "DBP_USERS_USERNAME=${DBP_USERS_USERNAME}" >> .env
      - echo "DBP_USERS_PASSWORD=${DBP_USERS_PASSWORD}" >> .env
      # memcached
      - echo "MEMCACHED_HOST=${MEMCACHED_HOST}" >> .env
      # AWS Services
      - echo "AWS_CLOUDFRONT_KEY_ID=${AWS_CLOUDFRONT_KEY_ID}" >> .env
      - echo "AWS_CLOUDFRONT_KEY_SECRET=${AWS_CLOUDFRONT_KEY_SECRET}" >> .env
      # Mail Services
      - echo "MAIL_USERNAME=${MAIL_USERNAME}" >> .env
      - echo "MAIL_PASSWORD=${MAIL_PASSWORD}" >> .env
      # Bible Organization APIs
      - echo "ARCLIGHT_API_KEY=${ARCLIGHT_API_KEY}" >> .env
      # CDN
      - echo "CDN_SERVER=${CDN_SERVER}" >> .env
      # API DBP logic
      - echo "BIBLEIS_KEYS=${BIBLEIS_KEYS}" >> .env
      - echo "GIDEONS_KEYS=${GIDEONS_KEYS}" >> .env
      # newrelic
      - echo "NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}" >> .env
      - echo "NEW_RELIC_APP_NAME=${NEW_RELIC_APP_NAME}" >> .env
      - echo "NEWRELIC_NAME_PROVIDER=${NEWRELIC_NAME_PROVIDER:-"{route}"}" >> .env
      - echo "S3_CONFIG_LOC=${S3_CONFIG_LOC}" >> .env
      - echo "BEANSTALK_BUCKET=${BEANSTALK_BUCKET}" >> .env
      # captcha
      - echo "CHECKBOX_RECAPTCHA_SITEKEY=${CHECKBOX_RECAPTCHA_SITEKEY}" >> .env
      - echo "CHECKBOX_RECAPTCHA_SECRETKEY=${CHECKBOX_RECAPTCHA_SECRETKEY}" >> .env
  build:
    commands:
      # run tests or other build steps here

  post_build:
    commands:
      - echo "Build completed!"
artifacts:
  # Collects the files to be stored as build output artifacts
  files:
    - app/**/*
    - bootstrap/**/*
    - config/**/*
    - database/**/*
    - doc/**/*
    - fixers/**/*
    - public/**/*
    - resources/**/*
    - routes/**/*
    - storage/**/*
    - tools/**/*
    - vendor/**/*
    - artisan
    - composer.json
    - composer.lock
    - LICENSE.md
    - license.svg
    - phpunit.xml
    - server.php
    - .env

  base-directory: '.' # Specify the directory containing your web app source code
